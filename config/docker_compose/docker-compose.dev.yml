version: '3.9'

services:
  sn:
    container_name: sn_server
    restart: always
    build:
      context: ./
      dockerfile: be/zarf/docker/Dockerfile
    env_file: .env
    expose:
      - ${SERVER_HOST_PORT}
      - ${METRICS_PORT}
    ports:
      - "127.0.0.1:3000:${SERVER_HOST_PORT}"
      - "127.0.0.1:4000:${METRICS_PORT}"
    labels:
      service.description: "social network service"
      service.label: "sn"
    depends_on:
      sn_postgres:
        condition: service_healthy

  sn_postgres:
    image: postgres:latest
    container_name: sn_postgres
    restart: always
    command: -p ${POSTGRES_PORT}
    labels:
      service.description: "Persistent storage for social network"
      service.label: "sn"
    volumes:
      - sn_pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB_NAME}
    expose:
      - ${POSTGRES_PORT}
    ports:
      - "127.0.0.1:5432:${POSTGRES_PORT}"
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB_NAME} -p ${POSTGRES_PORT}'" ]
      interval: 10s
      timeout: 3s
      retries: 3

volumes:
  sn_pgdata:
